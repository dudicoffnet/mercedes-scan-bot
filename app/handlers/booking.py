from aiogram import Router, F, Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from app.states.booking import Booking
from app.keyboards.main import kb_main
from app.services.notifications import notify_all, make_card_buttons

router = Router()

@router.message(F.text == 'üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è')
async def booking_start(msg: Message, state: FSMContext):
    await state.set_state(Booking.name)
    await msg.answer('–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?')

@router.message(Booking.name)
async def booking_name(msg: Message, state: FSMContext):
    await state.update_data(name=msg.text)
    await state.set_state(Booking.model)
    await msg.answer('–ú–æ–¥–µ–ª—å –∏ –≥–æ–¥ –∞–≤—Ç–æ? (–Ω–∞–ø—Ä–∏–º–µ—Ä: W204, 2011)')

@router.message(Booking.model)
async def booking_model(msg: Message, state: FSMContext):
    await state.update_data(model=msg.text)
    await state.set_state(Booking.issue)
    await msg.answer('–ß—Ç–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç? (–∫–æ—Ä–æ—Ç–∫–æ)')

@router.message(Booking.issue)
async def booking_issue(msg: Message, state: FSMContext):
    await state.update_data(issue=msg.text)
    await state.set_state(Booking.date)
    await msg.answer('–ö–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ –ø—Ä–∏–µ—Ö–∞—Ç—å? (–¥–∞—Ç–∞/–≤—Ä–µ–º—è)')

@router.message(Booking.date)
async def booking_date(msg: Message, state: FSMContext):
    await state.update_data(date=msg.text)
    await state.set_state(Booking.phone)
    await msg.answer('–û—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')

@router.message(Booking.phone)
async def booking_finish(msg: Message, state: FSMContext, bot: Bot):
    await state.update_data(phone=msg.text)
    data = await state.get_data()

    text = (
        'üì© <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b>\n'
        f'üë§ –ò–º—è: {data.get("name")}\n'
        f'üöò –ú–æ–¥–µ–ª—å: {data.get("model")}\n'
        f'üõ† –ü—Ä–æ–±–ª–µ–º–∞: {data.get("issue")}\n'
        f'üìÖ –í—Ä–µ–º—è: {data.get("date")}\n'
        f'üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data.get("phone")}\n'
        f'üó£ –û—Ç: @{msg.from_user.username or msg.from_user.id}'
    )

    markup = make_card_buttons()
    sent = await notify_all(bot, text, reply_markup=markup)

    if sent:
        await msg.answer('–°–ø–∞—Å–∏–±–æ! –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.', reply_markup=kb_main)
    else:
        await msg.answer('–°–ø–∞—Å–∏–±–æ! –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –°–≤—è–∂–µ–º—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.', reply_markup=kb_main)

    await state.clear()
